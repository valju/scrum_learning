Not in the Guide, but would make sense/we use

- Features (technical PRE-WORK and/or POST-WORK items also? What about learning?) in PBL (usually presented as user stories or use cases or other text. Attachments possible). PBL contains: PBL items

- 2h-6h _tasks_ in SBL (SBL items could be called tasks/daily tasks), some companies use even 16h, which kind of spoils some inspect and adapt benefits.
(Although the 2016 Scrum Guide talks only about planninng enough of (the start of) the Sprint). SBL contains: SBL items = tasks (to complete a selected PBL item)

- Select PBL items from PBL for the sprint and lock them from editing. Other PBL items can be changed or specified in more detail all the time = Product Backlog grooming. 

- If PBL item won't be finished in sprint/ accepted in sprint review, what to do? Put back to PBL. Possibly split out the done part to be a completed item, and rest to the new item (possibly done in future sprints).

- How/when/where is Definition of Done used? Daily scrum and Sprint review

- What do you have to do before Sprint 1 starts? (When/how does a Sprint start?)

- Scrum (agile) more stressful or less stressful than with bigger-chunk approaches (=plan-driven development process models)? (like waterfall)

- Sprints are min 1 week, max 4 weeks (or one full month) long. But how many sprints do we need to have any benefits of Scrum? (agile, incremental, iterative, inspect and adapt (both product and process), fail early, reduce risks) Maybe 3 or more would make sense normally.

- How many sprints at max? No limit, as we could be e.g. maintaining/improving our own e-commerce web app which is already in use but we would like to develop it constantly.